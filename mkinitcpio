#!/bin/bash
# Begin /usr/sbin/mkinitcpio

# This file based in part on the mkinitramfs script for the LFS LiveCD
# written by Alexander E. Patrakov and Jeremy Huntwork.

if [ -f /etc/mkinitcpio.conf ]; then
  . /etc/mkinitcpio.conf
fi

if [ "x${DATADIR}" == "x" ]; then
  DATADIR="/usr/lib/mkinitcpio"
fi

copy()
{
  local file

  if [ "$2" = "lib" ]; then
    file=$(PATH=/lib:/usr/lib type -p ${1})
  else
    file=$(type -p ${1})
  fi

  if [ -n "$file" ] ; then
    cp ${file} ${WDIR}/${2}
  else
    echo "Missing required file: ${1} for directory ${2}"
    rm -rf ${WDIR}
    exit 1
  fi
}

if [ -z ${1} ] ; then
  INITRD_FILE=initrd.img-no-kmods
else
  KERNEL_VERSION="${1}"
  INITRD_FILE=initrd.img-"${KERNEL_VERSION}"
fi

if [ -n "${KERNEL_VERSION}" ] && [ ! -d "/lib/modules/${1}" ] ; then
  echo "No modules directory named ${1}"
  exit 1
fi

printf "Creating ${INITRD_FILE}... "

# /bin files for all builds
binfiles="sh cat cp dd killall ls mkdir mknod mount"
binfiles="${binfiles} umount sed sleep ln rm uname"
binfiles="${binfiles} readlink basename"

# /sbin files for all builds
sbinfiles="modprobe blkid switch_root"

# Additional files list
unsorted=$(mktemp /tmp/unsorted.XXXXXXXXXX)

# Create a temporary working directory
WDIR=$(mktemp -d /tmp/initrd-work.XXXXXXXXXX)

# Create base directory structure
mkdir -p ${WDIR}/{bin,dev,lib,run,sbin,sys,proc,usr}
mkdir -p ${WDIR}/etc/modprobe.d
touch "${WDIR}/etc/modprobe.d/modprobe.conf"
ln -s lib "${WDIR}/lib64"
ln -s ../bin "${WDIR}/usr/bin"

# Create necessary device nodes
mknod -m 640 "${WDIR}/dev/console" c 5 1
mknod -m 664 "${WDIR}/dev/null"    c 1 3

# Install the basic init file
install -m0755 "${DATADIR}/init/init.in.head" "${WDIR}/init"

# Import modules and init modifications
for mod in ${initmods} ; do
  . "${DATADIR}/modules/${mod}"
  if [ -f "${DATADIR}/init/${mod}.init" ]; then
    cat "${DATADIR}/init/${mod}.init" >> "${WDIR}/init"
    echo "" >> "${WDIR}/init"
  fi
done

cat "${DATADIR}/init.in.tail" >> "${WDIR}/init"

# Install /bin files
for f in ${binfiles} ; do
  if [ -e "/bin/${f}" ]; then d="/bin"; else d="/usr/bin"; fi
  ldd "${d}/${f}" | sed "s/\t//" | cut -d " " -f1 >> "${unsorted}"
  copy "${d}/${f}" bin
done
ln -s bash "${WDIR}/bin/sh"


# Install /sbin files
for f in ${sbinfiles} ; do
  ldd "/sbin/${f}" | sed "s/\t//" | cut -d " " -f1 >> "${unsorted}"
  copy "${f}" sbin
done

# Install libraries
sort "${unsorted}" | uniq | while read library ; do
# linux-vdso and linux-gate are pseudo libraries and do not correspond to a file
# libsystemd-shared is in /lib/systemd, so it is not found by copy, and
# it is copied below anyway
  if [[ "${library}" == linux-vdso.so.1 ]] ||
     [[ "${library}" == linux-gate.so.1 ]] ||
     [[ "${library}" == libsystemd-shared* ]]; then
    continue
  fi

  copy "${library}" lib
done

# Import output modules
for mod in ${outmods} ; do
  . "${DATADIR}/modules/${mod}.out"
done

( cd "${WDIR}" ; find . | cpio -o -H newc --quiet | gzip -9 ) \
    > "${INITRAMFS_FILE}"

# Import standalone modules (busybox or microcode)
for mod in ${samods} ; do
  . "${DATADIR}/modules/${mod}.sa"
done

# Remove the temporary directories and files
rm -rf $WDIR $unsorted
printf "done.\n"

